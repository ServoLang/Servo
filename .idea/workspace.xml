<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="667e085a-183c-48c4-8c2b-bb0cf7e87834" name="Changes" comment="added go.mod">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/vm/vm_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/vm/vm_test.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file:///usr/lib/go-1.22" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;SuperScary&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/ServoLang/Servo.git&quot;,
    &quot;accountId&quot;: &quot;7ebd52ac-b7f1-4b2f-ac45-9ae65c640b64&quot;
  }
}</component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 8
}</component>
  <component name="ProjectId" id="2q5IWKv6PEWaPF5srlSIjKlYmua" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;DefaultGoTemplateProperty&quot;: &quot;Go File&quot;,
    &quot;Go Build.go build Servo/src.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestArrayLiterals in Servo/src/compiler.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestArrayLiterals in Servo/src/vm.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestBooleanExpression in Servo/src/compiler (1).executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestBooleanExpression in Servo/src/compiler.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestBooleanExpression in Servo/src/parser.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestBooleanExpressions in Servo/src/vm (1).executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestBooleanExpressions in Servo/src/vm.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestCallExpressionParsing in Servo/src/parser.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestConditionals in Servo/src/compiler.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestConditionals in Servo/src/vm.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestDefine in Servo/src/compiler.executor&quot;: &quot;Coverage&quot;,
    &quot;Go Test.TestFunctionLiteralParsing in Servo/src/parser.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestFunctionParameterParsing in Servo/src/parser.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestGlobalLetStatements in Servo/src/compiler.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestGlobalLetStatements in Servo/src/vm.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestGlobalStatements in Servo/src/compiler (1).executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestGlobalStatements in Servo/src/compiler.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestHashLiterals in Servo/src/compiler.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestHashLiterals in Servo/src/vm.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestIdentifierExpression in Servo/src/parser.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestIfElseExpression in Servo/src/parser.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestIfExpression in Servo/src/parser.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestIndexExpressions in Servo/src/compiler.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestIndexExpressions in Servo/src/vm.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestInstructionsString in Servo/src/code.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestInstructionsString in Servo/src/compiler.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestIntegerArithmetic in Servo/src/compiler (1).executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestIntegerArithmetic in Servo/src/compiler.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestIntegerArithmetic in Servo/src/vm (1).executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestIntegerArithmetic in Servo/src/vm.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestIntegerLiteralExpression in Servo/src/parser.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestLetStatements in Servo/src/parser.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestMacroLiteralParsing in Servo/src/parser.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestMake in Servo/src/code.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestOperatorPrecedenceParsing in Servo/src/parser.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestParsingArrayLiterals in Servo/src/parser.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestParsingEmptyHashLiteral in Servo/src/parser.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestParsingHashLiteralsStringKeys in Servo/src/parser.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestParsingHashLiteralsWithExpression in Servo/src/parser.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestParsingIndexExpression in Servo/src/parser.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestParsingInfixExpression in Servo/src/parser.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestParsingPrefixExpression in Servo/src/parser.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestReadOperands in Servo/src/compiler.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestResolveGlobal in Servo/src/compiler.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestReturnStatements in Servo/src/parser.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestStringExpressions in Servo/src/compiler.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestStringExpressions in Servo/src/vm.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestStringLiteralExpression in Servo/src/parser.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.go test Servo/src/code.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.go test Servo/src/compiler.executor&quot;: &quot;Run&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.formatter.settings.were.checked&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.migrated.go.modules.settings&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.go.list.on.any.changes.was.set&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;go.import.settings.migrated&quot;: &quot;true&quot;,
    &quot;go.sdk.automatically.set&quot;: &quot;true&quot;,
    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;/home/wylan/Documents/Projects/ServoLang/Servo&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.keymap&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="D:\Servo Lang\Servo\.github\workflows" />
      <recent name="D:\Servo Lang\Servo\reports" />
    </key>
  </component>
  <component name="RunManager" selected="Go Build.go build Servo/src">
    <configuration default="true" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="Servo" />
      <working_directory value="$PROJECT_DIR$" />
      <go_parameters value="-i" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration name="go build Servo/src" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="Servo" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="Servo/src" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/src/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="TestHashLiterals in Servo/src/compiler" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="Servo" />
      <working_directory value="$PROJECT_DIR$/src/compiler" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="Servo/src/compiler" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestHashLiterals\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestHashLiterals in Servo/src/vm" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="Servo" />
      <working_directory value="$PROJECT_DIR$/src/vm" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="Servo/src/vm" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestHashLiterals\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestIndexExpressions in Servo/src/compiler" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="Servo" />
      <working_directory value="$PROJECT_DIR$/src/compiler" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="Servo/src/compiler" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestIndexExpressions\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestIndexExpressions in Servo/src/vm" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="Servo" />
      <working_directory value="$PROJECT_DIR$/src/vm" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="Servo/src/vm" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestIndexExpressions\E$" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="GoTestRunConfiguration" factoryName="Go Test">
      <module name="Servo" />
      <working_directory value="$PROJECT_DIR$" />
      <go_parameters value="-i" />
      <kind value="DIRECTORY" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Build.go build Servo/src" />
        <item itemvalue="Go Test.TestIndexExpressions in Servo/src/vm" />
        <item itemvalue="Go Test.TestIndexExpressions in Servo/src/compiler" />
        <item itemvalue="Go Test.TestHashLiterals in Servo/src/vm" />
        <item itemvalue="Go Test.TestHashLiterals in Servo/src/compiler" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-gosdk-d297c17c1fbd-d82d926f19eb-org.jetbrains.plugins.go.sharedIndexes.bundled-GO-243.22562.186" />
        <option value="bundled-js-predefined-d6986cc7102b-deb605915726-JavaScript-GO-243.22562.186" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="added go.mod" />
    <option name="LAST_COMMIT_MESSAGE" value="added go.mod" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/Servo$TestDefine_in_Servo_src_compiler.out" NAME="TestDefine in Servo/src/compiler Coverage Results" MODIFIED="1734045928355" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
  </component>
</project>